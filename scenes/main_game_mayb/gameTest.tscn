[gd_scene load_steps=4 format=3 uid="uid://bw7lwqdkw30fo"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_gvfx2"]
size = Vector2(10000, 20)

[sub_resource type="GDScript" id="GDScript_gvfx2"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_ec8ka"]
radius = 5.0
height = 20.0

[node name="GameTest" type="Node2D"]

[node name="StaticBody2D" type="StaticBody2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
shape = SubResource("RectangleShape2D_gvfx2")

[node name="ColorRect" type="ColorRect" parent="StaticBody2D"]
offset_left = -5000.0
offset_top = -10.0
offset_right = 5000.0
offset_bottom = 10.0
color = Color(5.10186e-06, 0.620035, 1.92523e-07, 1)

[node name="CharacterBody2D" type="CharacterBody2D" parent="."]
position = Vector2(0, -31)
script = SubResource("GDScript_gvfx2")

[node name="CollisionShape2D" type="CollisionShape2D" parent="CharacterBody2D"]
shape = SubResource("CapsuleShape2D_ec8ka")

[node name="Sprite2D" type="Sprite2D" parent="CharacterBody2D"]
